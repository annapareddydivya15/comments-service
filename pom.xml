<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.divya.apps</groupId>
	<artifactId>comments</artifactId>
	<version>${revision}</version>
	<name>comments</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>17</java.version>
		<dockerImage>comments-ms</dockerImage>
		<release.number>1.1.2</release.number>
		<release.build>SNAPSHOT</release.build>
		<revision>${release.number}-${release.build}</revision>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-mongodb</artifactId>
		</dependency>
		<dependency>
			<groupId>de.flapdoodle.embed</groupId>
			<artifactId>de.flapdoodle.embed.mongo</artifactId>
			<version>4.10.1</version>
			<scope>test</scope>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>org.mongodb</groupId>-->
<!--			<artifactId>mongo-java-driver</artifactId>-->
<!--			<version>3.12.14</version>-->
<!--		</dependency>-->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>4.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>2.0.1.Final</version>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>0.2.6</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.7.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>6.3.0</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>
								${project.basedir}/${project.name}.yml
							</inputSpec>
							<generatorName>spring</generatorName>
							<apiPackage>com.divya.apps.comments.api</apiPackage>
							<modelPackage>com.divya.apps.comments.model</modelPackage>
							<supportingFilesToGenerate>
								ApiUtil.java
							</supportingFilesToGenerate>
							<configOptions>
								<interfaceOnly>true</interfaceOnly>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
<!--					<execution>-->
<!--						<id>docker-create-network</id>-->
<!--						<goals>-->
<!--							<goal>exec</goal>-->
<!--						</goals>-->
<!--						&lt;!&ndash; before starting docker &ndash;&gt;-->
<!--						<phase>package</phase>-->
<!--						<configuration>-->
<!--							<skip>${docker.skipCreateNetwork}</skip>-->
<!--							<executable>docker</executable>-->
<!--							&lt;!&ndash; if network already exists this will fail, but that's ok &ndash;&gt;-->
<!--							<successCodes>-->
<!--								<successCode>0</successCode>-->
<!--								<successCode>1</successCode>-->
<!--							</successCodes>-->
<!--							<workingDirectory>${project.basedir}</workingDirectory>-->
<!--							<arguments>-->
<!--								<argument>network</argument>-->
<!--								<argument>create</argument>-->
<!--								<argument>${docker_network_name}</argument>-->
<!--							</arguments>-->
<!--						</configuration>-->
<!--					</execution>-->
					<execution>
						<id>docker-build-containers</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<!-- before starting docker -->
						<phase>package</phase>
						<configuration>
							<executable>docker</executable>
							<workingDirectory>${project.basedir}</workingDirectory>
							<arguments>
								<argument>build</argument>
								<argument>--no-cache</argument>
								<argument>--build-arg</argument>
								<argument>JAR_FILE=/target/${project.build.finalName}.jar</argument>
								<argument>${project.basedir}</argument>
								<argument>-t</argument>
								<argument>${dockerImage}:${release.number}-SNAPSHOT</argument>
								<argument>-t</argument>
								<argument>${dockerImage}:${revision}</argument>
								<argument>-t</argument>
								<argument>${dockerImage}:latest</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
